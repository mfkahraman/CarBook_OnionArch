@using CarBook_OnionArch.Dto.PricingDtos
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<ResultPricingDto>

@{
    ViewData["Title"] = "Ücretlendirmeler";
    ViewData["SubTitle"] = "Ücretlendirme Yönetimi Sayfası";
    Layout = "~/Areas/Admin/Views/AdminLayout/AdmLayout.cshtml";

    int count = (Model.PageNumber - 1) * Model.PageSize;
}


<a class="btn btn-success mb-3" href="@Url.Action("Create", "AdminPricing", new { area = "Admin" })">Yeni Ücretlendirme Oluştur</a>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>#</th>
            <th>Ücretlendirme Adı</th>
            <th>İşlemler</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var banner in Model)
        {
            count++;
            <tr>
                <td>@count</td>
                <td>@banner.name</td>
                <td>
                    <a class="btn btn-primary btn-sm" href="@Url.Action("Update", "AdminPricing", new { id = banner.id, area = "Admin" })">Güncelle</a>
                    <a class="btn btn-danger btn-sm" href="@Url.Action("Delete", "AdminPricing", new { id = banner.id, area = "Admin" })"
                       onclick="return confirm('Bu veriyi silmek istediğinizden emin misiniz?');">Sil</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@* Paged List Pagination *@
<div class="d-flex justify-content-center">
    @Html.PagedListPager(
    Model,
    page => Url.Action("Index", new { page }),
        new X.PagedList.Mvc.Core.PagedListRenderOptions
        {
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
            UlElementClasses = new[] { "pagination" },
            DisplayLinkToFirstPage = X.PagedList.Mvc.Core.PagedListDisplayMode.Always,
            DisplayLinkToLastPage = X.PagedList.Mvc.Core.PagedListDisplayMode.Always,
            DisplayLinkToPreviousPage = X.PagedList.Mvc.Core.PagedListDisplayMode.Always,
            DisplayLinkToNextPage = X.PagedList.Mvc.Core.PagedListDisplayMode.Always
        }
        )
</div>

